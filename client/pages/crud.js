import Head from 'next/head';
import { useRouter } from 'next/router';
import { Button } from 'react-bootstrap';
import { useDispatch, useSelector } from 'react-redux';
import AddContactModal from '../components/AddContactModal';
import EditContactModal from '../components/EditContactModal';
import ViewContactModal from '../components/ViewContactModal';
import { deleteContact, getAllContacts } from '../store/actions/contact';
import { setAddContactModal, setEditContactModal, setViewContactModal } from '../store/reducers/pageSlice';
import { wrapper } from '../store/store';
import styles from '../styles/Home.module.css';

export default function Home() {

  const router = useRouter();

  const dispatch = useDispatch();

  const { isShowAddModal, editContactModal, contacts = [], isShowViewModal } = useSelector(state => ({
    isShowAddModal: state.page?.contact?.addContactModal,
    editContactModal: !!state.page.contact?.editContactModal,
    isShowViewModal: !!state.page.contact?.viewContactModal,
    contacts: state.page.contact?.data
  }));

  let timeOutId;
  const handleSearch = (value) => {
    if (timeOutId) { clearTimeout(timeOutId) }
    timeOutId = setTimeout(() => { dispatch(getAllContacts(value)) }, 500)
  }

  const handleEditClick = contact => {
    dispatch(setEditContactModal(contact))
  }

  const handleAddClick = () => {
    dispatch(setAddContactModal(true))
  }

  const handleViewClick = contact => {
    dispatch(setViewContactModal(contact))
  }

  const handleDeleteClick = id => {
    const isConfirmed = confirm('Are you sure you want to delete');
    if (isConfirmed) dispatch(deleteContact(id))
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main >
        {editContactModal && <EditContactModal />}
        {isShowAddModal && <AddContactModal />}
        {isShowViewModal && <ViewContactModal />}
        <div className='d-flex flex-wrap mb-3' >
          <div className='mt-4' style={{ paddingRight: "20px" }}>
            <input type="text" className='form-control' placeholder='Search' onChange={e => handleSearch(e.target.value)} />
          </div>
          <Button className='mt-4' onClick={handleAddClick}>Add contact</Button>
        </div>
        <table className="table">
          <thead>
            <tr>
              <th scope="col">#</th>
              <th scope="col">Name</th>
              <th scope="col">Mail Id</th>
              <th scope="col">Company name</th>
              <th scope="col">Chat</th>
              <th scope='col'>view</th>
              <th scope="col">Edit</th>
              <th scope="col">Delete</th>
            </tr>
          </thead>
          <tbody>
            {contacts.map((contact, i) => {
              return (<tr key={`CONTACT_ROW_${i}`}>
                <th scope="row">{i + 1}</th>
                <td>{contact?.firstName} {contact?.lastName}</td>
                <td>{contact?.email}</td>
                <td>{contact?.company}</td>
                <td>
                  <Button title="Chat" onClick={() => router.push(`/chat/${contact.id}`)}>
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" className="bi bi-chat-dots-fill" viewBox="0 0 16 16">
                      <path d="M16 8c0 3.866-3.582 7-8 7a9.06 9.06 0 0 1-2.347-.306c-.584.296-1.925.864-4.181 1.234-.2.032-.352-.176-.273-.362.354-.836.674-1.95.77-2.966C.744 11.37 0 9.76 0 8c0-3.866 3.582-7 8-7s8 3.134 8 7zM5 8a1 1 0 1 0-2 0 1 1 0 0 0 2 0zm4 0a1 1 0 1 0-2 0 1 1 0 0 0 2 0zm3 1a1 1 0 1 0 0-2 1 1 0 0 0 0 2z" />
                    </svg>
                  </Button>
                </td>
                <td>
                  <Button title="View" variant='info' onClick={() => handleViewClick(contact)}>
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" className="bi bi-eye-fill" viewBox="0 0 16 16">
                      <path d="M10.5 8a2.5 2.5 0 1 1-5 0 2.5 2.5 0 0 1 5 0z" />
                      <path d="M0 8s3-5.5 8-5.5S16 8 16 8s-3 5.5-8 5.5S0 8 0 8zm8 3.5a3.5 3.5 0 1 0 0-7 3.5 3.5 0 0 0 0 7z" />
                    </svg>
                  </Button>
                </td>
                <td>
                  <Button title="Edit" variant="warning" onClick={() => handleEditClick(contact)}>
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" className="bi bi-pencil-fill" viewBox="0 0 16 16">
                      <path d="M12.854.146a.5.5 0 0 0-.707 0L10.5 1.793 14.207 5.5l1.647-1.646a.5.5 0 0 0 0-.708l-3-3zm.646 6.061L9.793 2.5 3.293 9H3.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.207l6.5-6.5zm-7.468 7.468A.5.5 0 0 1 6 13.5V13h-.5a.5.5 0 0 1-.5-.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.5-.5V10h-.5a.499.499 0 0 1-.175-.032l-.179.178a.5.5 0 0 0-.11.168l-2 5a.5.5 0 0 0 .65.65l5-2a.5.5 0 0 0 .168-.11l.178-.178z" />
                    </svg>
                  </Button>
                </td>
                <td>
                  <Button title="Delete" variant='danger' onClick={() => handleDeleteClick(contact.id)}>
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" className="bi bi-trash-fill" viewBox="0 0 16 16">
                      <path d="M2.5 1a1 1 0 0 0-1 1v1a1 1 0 0 0 1 1H3v9a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V4h.5a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H10a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1H2.5zm3 4a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 .5-.5zM8 5a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7A.5.5 0 0 1 8 5zm3 .5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 1 0z" />
                    </svg>
                  </Button>
                </td>
              </tr>)
            })}
          </tbody>
        </table>
      </main>
    </div>
  )
}

export const getServerSideProps = wrapper.getServerSideProps(
  (store) =>
    async ({ req, res }) => {
      await store.dispatch(getAllContacts())
      return {};
    }
);